import java.io.*;

public class CSVBatchConverter {

    public static void main(String[] args) {
        File inputFolder = new File("C:\\InputCSVs");     // Folder with .csv files
        File outputFolder = new File("C:\\OutputSQLs");   // Output .txt destination

        if (!outputFolder.exists()) {
            outputFolder.mkdirs();
        }

        File[] csvFiles = inputFolder.listFiles((dir, name) -> name.toLowerCase().endsWith(".csv"));

        if (csvFiles == null || csvFiles.length == 0) {
            System.out.println("No CSV files found in input folder.");
            return;
        }

        for (File csvFile : csvFiles) {
            String csvFileName = csvFile.getName().replaceFirst("[.][^.]+$", "");  // Remove extension
            File outputFile = new File(outputFolder, csvFileName + ".txt");

            // Get folder name and compute table name
            String folderName = csvFile.getParentFile().getName();
            String tableName = adjustTableName(folderName, csvFileName);

            convertCsvToIndividualDb2Inserts(csvFile, outputFile, tableName);
        }

        System.out.println("All CSV files converted successfully.");
    }

    // Adjust table name based on folder and file name
    private static String adjustTableName(String folderName, String csvName) {
        String modifiedTable = folderName;

        if (!folderName.isEmpty() && !csvName.isEmpty() &&
            Character.toLowerCase(folderName.charAt(0)) == Character.toLowerCase(csvName.charAt(0))) {

            // Replace first letter with 't'
            modifiedTable = "t" + folderName.substring(1);
        }

        return "sibdba01." + modifiedTable;
    }

    public static void convertCsvToIndividualDb2Inserts(File csvFile, File outputFile, String tableName) {
        try (BufferedReader br = new BufferedReader(new FileReader(csvFile));
             BufferedWriter bw = new BufferedWriter(new FileWriter(outputFile))) {

            String line;

            // Skip header
            br.readLine();

            while ((line = br.readLine()) != null) {
                if (line.trim().isEmpty()) continue;

                String[] parts = line.split(",", -1);
                StringBuilder pipeSeparated = new StringBuilder();
                for (int i = 0; i < parts.length; i++) {
                    if (i > 0) pipeSeparated.append("|");
                    pipeSeparated.append(parts[i]);
                }

                String formattedValues = StringFormatter.convertForDB2(pipeSeparated.toString());
                bw.write("INSERT INTO " + tableName + " VALUES " + formattedValues + ";");
                bw.newLine();
            }

            System.out.println("Converted: " + csvFile.getName() + " â†’ " + outputFile.getName());

        } catch (IOException e) {
            System.err.println("Error processing " + csvFile.getName() + ": " + e.getMessage());
        }
    }
}
